language: node_js

env:
  COMPOSE_VERSION: 3.5

node_js:
- '6'
services:
- mongodb
cache:
  directories:
    - node_modules
deploy:
- provider: s3
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  local_dir: dpl_cd_upload
  skip_cleanup: true
  on: &2
    repo: hackdie/webapp_test
  bucket: s3-travis
  region: eu-west-1
- provider: codedeploy
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  bucket: s3-travis
  key: latest.zip
  bundle_type: zip
  application: NameOfTheCodeDeployApplicationNameHERE
  deployment_group: TravisTest
  region: eu-west-1
  on: *2
script:
  - zip -r latest *
  - mkdir -p dpl_cd_upload
  - mv latest.zip dpl_cd_upload/latest.zip
before_install:
  # Docker Compose Install 
  - curl -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  # Download and install Docker libs
  - curl -L https://github.com/Ortus-Solutions/docker-buildfiles/archive/master.zip > docker.zip
  - unzip docker.zip -d workbench
  - mv workbench/docker-buildfiles-master workbench/docker
  # CommandBox Keys
  - sudo apt-key adv --keyserver keys.gnupg.net --recv 6DA70622
  - sudo echo "deb http://downloads.ortussolutions.com/debs/noarch /" | sudo tee -a
    /etc/apt/sources.list.d/commandbox.list
install:
  # Core testing install
  - sudo apt-get update && sudo apt-get --assume-yes install commandbox
  - box install
  - box server start
  # Docker CFML Server Tests
  - docker-compose build
  - docker-compose up -d